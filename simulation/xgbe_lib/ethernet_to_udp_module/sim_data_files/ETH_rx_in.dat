% comments:
% any line started with '%' - flag can be specified as generic in file_reader_hex
anything less than
length of a line
containing data
is also considered
as a comment

% interpreter ignores empty lines as well

% "@" is used to indicate counters for transmission start
% flag can be specified as generic in AV_ST_sender
% must be decimal numbers in increasing order!

% first we establish a connection from A3:C2:C7:00:12:32/C0.A8.03.61 (192.168.3.97)
% starting with an ARP request and a ping.

% DHCP Offer (35*8+6 bytes long = 286 = x11E)
@ 100
% Ethernet header
% DST MAC, SCR MAC
0022 8F02 41EE 0123
% ....... protocol, IP header
4567 89AB 0800 4500
% IP header (continued)
0133 093C 4000 8011
% ............ UDP header
0000 C0A8 0101 FFFF
% SRC DST length CRC
FFFF 0043 0044 011F
% ............ DHCP header
0000 0201 0600 DEAD
% XID SECS FLAGS
BEEF 0000 0000 0000
% CIADDR YIADDR
0000 C0A8 001D C0A8
% SIADDR GIADDR
0101 0000 0000 0022
% CHADDR(1)
8F02 41EE 0000 0000
% CHADDR(2)
0000 0000 0000 0000
% SNAME(64 octets = 8 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
% BNAME (128 octets = 16 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
% ............ MAGIC_COOKIE
0000 0000 0000 6382
% .. DHCP offer (3 + 1)
5363 3501 0200 0104
% More DHCP options:
% IP subnet mask (6) & Router IP (6)
FFFF 0000 0304 C0A8
% IP lease time (6)
0101 3304 0001 5180
% DHCP server (6)
3604 C0A8 0101 0608
% DNS server (10)
0102 0304 0102 0305
FFBA DBAD BADD 0000 111 0

% DHCP Acknowledge
@ 300
% Ethernet header
% DST MAC, SCR MAC
0022 8F02 41EE 0123
% ....... protocol, IP header
4567 89AB 0800 4500
% IP header (continued)
001D 093C 4000 8011
% ............ UDP header
0000 C0A8 0101 FFFF
% SRC DST length CRC
FFFF 0043 0044 011F
0000 0201 0600 DEAD
% DHCP-header XID SECS FLAGS
BEEF 0000 0000 0000
% CIADDR YIADDR
0000 C0A8 001D C0A8
% SIADDR GIADDR
0101 0000 0000 0022
% CHADDR(1)
8F02 41EE 0000 0000
% CHADDR(2)
0000 0000 0000 0000
% SNAME(64 octets = 8 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
% BNAME (128 octets = 16 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 6382
% MAGIC_COOKIE DHCP ackn (3 + 1)
5363 3501 0500 0104
% More DHCP options:
% IP subnet mask (6) & Router IP (6)
FFFF 0000 0304 C0A8
% IP lease time (6)
0101 3304 0000 0050
% DHCP server (6)
3604 C0A8 0101 0608
% DNS server (10)
0102 0304 0102 0305
FFBA DBAD BADD BADD 111 0

% ARP reply to just (DHCP) offered IP address faking it's use by some other device
@ 425
0022 8F02 41EE 1234
5678 9ABC 0806 0001
0800 0604 0002 1234
5678 90AB C0A8 001D
0022 8F02 41EE 0000
0000 0000 0000 0000 110 0

@ 478
% ARP reply from DHCP server on its IP address
0022 8F02 41EE 0123
4567 89AB 0806 0001
0800 0604 0002 0123
4567 89AB C0A8 0101
0022 8F02 41EE 0000
0000 0000 0000 0000 110 0

% 2nd DHCP Offer (after having declined the 1st)
@ 1100
% Ethernet header
% DST MAC, SCR MAC
0022 8F02 41EE 0123
% ....... protocol, IP header
4567 89AB 0800 4500
% IP header (continued)
0133 093C 4000 8011
% ............ UDP header
0000 C0A8 0101 FFFF
% SRC DST length CRC
FFFF 0043 0044 011F
% ............ DHCP header
0000 0201 0600 DEAD
% XID SECS FLAGS
BEF0 0000 0000 0000
% CIADDR YIADDR
0000 C0A8 001E C0A8
% SIADDR GIADDR
0101 0000 0000 0022
% CHADDR(1)
8F02 41EE 0000 0000
% CHADDR(2)
0000 0000 0000 0000
% SNAME(64 octets = 8 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
% BNAME (128 octets = 16 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
% ............ MAGIC_COOKIE
0000 0000 0000 6382
% .. DHCP offer (3 + 1)
5363 3501 0200 0104
% More DHCP options:
% IP subnet mask (6) & Router IP (6)
FFFF 0000 0304 C0A8
% IP lease time (6)
0101 3304 0001 5180
% DHCP server (6)
3604 C0A8 0101 0608
% DNS server (10)
0102 0304 0102 0305
FFBA DBAD BADD 0000 111 0

% DHCP Acknowledge
@ 1300
% Ethernet header
% DST MAC, SCR MAC
0022 8F02 41EE 0123
% ....... protocol, IP header
4567 89AB 0800 4500
% IP header (continued)
001D 093C 4000 8011
% ............ UDP header
0000 C0A8 0101 FFFF
% SRC DST length CRC
FFFF 0043 0044 011F
0000 0201 0600 DEAD
% DHCP-header XID SECS FLAGS
BEF0 0000 0000 0000
% CIADDR YIADDR
0000 C0A8 001E C0A8
% SIADDR GIADDR
0101 0000 0000 0022
% CHADDR(1)
8F02 41EE 0000 0000
% CHADDR(2)
0000 0000 0000 0000
% SNAME(64 octets = 8 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
% BNAME (128 octets = 16 rows)
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 0000
0000 0000 0000 6382
% MAGIC_COOKIE DHCP ackn (3 + 1)
5363 3501 0500 0104
% More DHCP options:
% IP subnet mask (6) & Router IP (6)
FFFF 0000 0304 C0A8
% IP lease time (6)
0101 3304 0000 0020
% DHCP server (6)
3604 C0A8 0101 0608
% DNS server (10)
0102 0304 0102 0305
FFBA DBAD BADD BADD 111 0

% now we are configured with a proper IP address and some further testing can begin

% ARP request by A3:C2:C7:00:12:32/C0.A8.03.61 (192.168.3.97)
@ 1520
FFFF FFFF FFFF A3C2
C700 1232 0806 0001
0800 0604 0001 A3C2
C700 1232 C0A8 0361
FFFF FFFF FFFF C0A8

without error:
001E 0000 0000 0000
0000 0000 0000 0000
0000 0003 2100 0000 011 0

PING request:
@ 1530
0022 8F02 41EE A3C2
C700 1232 0800 4500
003c 2f46 0000 8001
0000 c0a8 0361 c0a8
001e 0800 4d53 0001
0008 6162 6364 6566
6768 696a 6b6c 6d6e
6f70 7172 7374 7576
7761 6263 6465 6667
6869 0000 0000 0000 110 0

% IP packet: UDP data from port a191 to port 0001
@ 1545
0022 8F02 41EE A3C2
C700 1232 0800 4500
001d 093c 4000 8011
0000 c0a8 0361 c0a8
001e a191 0001 0044

0000 0809 1011 1213
1234 1234 1234 1234
2345 2345 2345 2345
3456 3456 3456 3456
4567 4567 4567 4567
5678 5678 5678 5678
6789 6789 6789 6789
7890 7890 7890 7890 100 0

% IP packet: UDP data from port 04d2 to port 0002
% will be looped back
@ 1560
0022 8f02 41ee A3C2
C700 1232 0800 4500
0054 ed37 0000 ff11
3ce8 c0a8 0361 c0a8
001e 04d2 0002 0040
96de 7465 7374 2062
6c61 2062 6c61 2065
7465 2070 7020 4c41
5050 2068 6575 7420
6973 7420 6569 6e20
7775 6e64 6572 7363
686f 656e 6572 2074
6167 ffff ffff ffff 110 0

% padded IP packet from 00:30:64:09:08:FA/C0.A8.00.0A (192.168.0.10):
% UDP data from port 04d2 to port 0002
% padding:
% the packet is padded if its length is less then 64 bytes, including the 4 bytes of F(rame) C(heck) S(um)
% so basically this means, a packet is padded, if:
% - it's Ethernet data content (including header) is less than 60 bytes
% - supposing 6+6+2 bytes Ethernet header, it's IPv4 frame length is less than 46 bytes
% - supposing 14+20 bytes Eth+IP header, it's UDPv4 frame length is less than 26 bytes
% will be looped back - if not filtered out due to 'invalid' length indication
@ 1575
0022 8f02 41ee 0030
6409 08fa 0800 4500
002d ed37 0000 ff11
3ce8 c0a8 000a c0a8
001e 04d2 0002 0010
96de 1000 0001 2000
0002 0000 0000 0000
0000 0000 0000 FC52 010 0

% send ARP response from 192.168.0.10 just after the 2nd ARP request has been started sending
@ 1695
0022 8F02 41EE C3C2
D701 4321 0806 0001
0800 0604 0002 C3C2
D701 4321 C0A8 000A
0022 8F02 41EE C0A8
001e 0000 0000 0000 100 0

%ARP response:
%@ 1640
%0022 8F02 41EE B3C2
%C701 1234 0806 0001
%0800 0604 0002 B3C2
%C701 1234 C0A8 0363
%0022 8F02 41EE C0A8
%001e 0000 0000 0000 100 0

% now we establish a connection from 00:19:99:12:39:56/C0.A8.03.63 (192.168.3.99)
% starting with an ARP request and a ping.

ARP request:
@ 1750
FFFF FFFF FFFF 0019
9912 3956 0806 0001
0800 0604 0001 0019
9912 3956 C0A8 0363
FFFF FFFF FFFF C0A8

without error:
001e 0000 0000 0000
0000 0000 0000 0000
0000 0003 2100 0000 011 0

PING request:
@ 1760
0022 8F02 41EE 0019
9912 3956 0800 4500
003c 2f46 0000 8001
0000 c0a8 0363 c0a8
001e 0800 4d53 0001
0008 6162 6364 6566
6768 696a 6b6c 6d6e
6f70 7172 7374 7576
7761 6263 6465 6667
6869 0000 0000 0000 110 0

% IP packet: UDP data from port a192 to port 0001
@ 1780
0022 8F02 41EE 0019
9912 3956 0800 4500
001d 093c 4000 8011
0000 c0a8 0361 c0a8
% 000c: length field (UDP header + data)
001e a192 0001 000c
0000 1000 0001 ffff 010 0

% IP packet: UDP data from port a192 to port 0001
% shortest packet again, but this is the padded version:
@ 1787
0022 8F02 41EE 0019
9912 3956 0800 4500
001d 093c 4000 8011
0000 c0a8 0361 c0a8
% 000c: length field (UDP header + data)
001e a192 0002 000c
0000 1000 0001 0000
0000 0000 0000 0000
0000 0000 0000 FC52 010 0

% another IP packet, which will be filtered out due to unaccepted IP: 8d4c:5e60
% if src address filter is enabled

@ 1800
0022 8F02 41EE 0019
9912 3956 0800 4500
001d 093c 4000 8011
0000 8d4c 5e60 c0a8
001e a19f 0001 0035

0000 0809 1011 1213
0001 0001 0001 0001
0002 0002 0002 0002
0003 0003 0003 0003
0004 0004 0004 0004
0005 0005 0005 0005

0000 0809 12ff ffff 011 0

PING request:
@ 1820
0022 8F02 41EE 0019
9912 3956 0800 4500
003c 2f46 0000 8001
0000 c0a8 0363 c0a8
001e 0800 4d53 0001
0008 6162 6364 6566
6768 696a 6b6c 6d6e
6f70 7172 7374 7576
7761 6263 6465 6667
6869 0000 0000 0000 110 0

PING request:
@ 1835
0022 8F02 41EE 0019
9912 3956 0800 4500
003c 2f46 0000 8001
0000 c0a8 0363 c0a8
001e 0800 4d53 0001
0008 6162 6364 6566
6768 696a 6b6c 6d6e
6f70 7172 7374 7576
7761 6263 6465 6667
6869 0000 0000 0000 110 0

% unpadded ARP request:
@ 1846
FFFF FFFF FFFF 0019
9912 3956 0806 0001
0800 0604 0001 0019
9912 3956 C0A8 0363
FFFF FFFF FFFF C0A8
001e 1234 5678 9abc 110 0

% PING request: (to wrong IP)
@ 1860
1022 8F02 41EE 0019
9912 3956 0800 4500
003c 2f46 0000 8001
0000 c0a8 0363 c0a8
001e 0800 4d53 0001
0008 6162 6364 6566
6768 696a 6b6c 6d6e
6f70 7172 7374 7576
7761 6263 6465 6667
6869 0000 0000 0000 110 0

% unpadded ARP request to wrong IP:
@ 1875
FFFF FFFF FFFF 0019
9912 3956 0806 0001
0800 0604 0001 0019
9912 3956 C0A8 0363
FFFF FFFF FFFF C0A8
001f 1234 5678 9abc 110 0
% do expect no answer

% IP packet: UDP data from port a191 to port 0001
@ 1900
0022 8F02 41EE A3C2
C700 1232 0800 4500
001d 093c 4000 8011
0000 c0a8 0361 c0a8
001e a191 0001 0044

0000 0809 1011 1213
1234 1234 1234 1234
2345 2345 2345 2345
3456 3456 3456 3456
4567 4567 4567 4567
5678 5678 5678 5678
6789 6789 6789 6789
7890 7890 7890 7890 100 0
