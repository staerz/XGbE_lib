% comments:
% any line started with '%' - flag can be specified as generic in file_reader_hex
anything less than
length of a line
containing data
is also considered
as a comment

% interpreter ignores empty lines as well

% "@" is used to indicate counters for transmission start
% flag can be specified as generic in AV_ST_sender
% must be decimal numbers in increasing order!

% IP packet:
% IP header starting with 4500
% xxxx 001d 093c 4000
% 8011 0000
% IP src = c0a8 0063 (192.168.0.99)
% IP dst = c0a8 001e (192.168.0.30)

% UDP header:
% xxxx xxxx a191 0001
% 0044 0000

% actual data that is transferred to FPGA everything from 0809

@ 20
4500 001d 093c 4000
8011 0000 c0a8 0063
c0a8 001e a191 0001
0044 0000 0809 1011
1213 1234 1234 1234
1234 2345 2345 2345
2345 3456 3456 3456
3456 4567 4567 4567
4567 5678 5678 5678
5678 6789 6789 6789
6789 7890 7890 7890 010 0


% IP packet:
% IP header starting wit 4500
% xxxx 0001d 093c 4000
% 8011 0000
% IP src = c0a8 0163 (192.168.0.99)
% IP dst = c0a8 001e (192.168.0.30)

% UDP header:
% xxxx xxxx a192 0002
% 0044 0000

% actual data that is transferred to FPGA everything from 0809

@ 40
4500 001d 093c 4000
8011 0000 c0a8 0064
c0a8 001e a192 0002
0044 0000 0809 1011
1213 1234 1234 1234
2345 2345 2345 2345
3456 3456 3456 3456
4567 4567 4567 4567
5678 5678 5678 5678
6789 6789 6789 6789
7890 7890 7890 7890 010 0



1415 1617
1819 2021


%ICMP request
% IP header starting wit 4500
% xxxx 0003c 2f46 0000
% 8001 0000
% IP src = c0a8 0063 (192.168.0.99)
% IP dst = c0a8 001e (192.168.0.30)

PING request: not
@ 60
4500 003c 2f46 0000
8001 0000 c0a8 0065
c0a8 001e 0800 4d53
0001 0008 0862 6364
6566 6768 696a 6b6c
6d6e 6f70 7172 7374
7576 7761 6263 6465
6667 6869 0000 0000 110 0

% complete packet
% with empty flag end error flag


% shortest packet possible (unpadded), addressed to FPGA2:
% 1 IPbus data word (32 bit) x"1000_0001"
% this packet will actually be padded by the MAC

@ 80
4500 001d 093c 4000
8011 0000 c0a8 0061
% 000c: length field (UDP header + data)
c0a8 001e a192 0001
000c 0000 1000 0001 010 0

% shortest packet again, but this is the padded version:
@ 100
4500 001d 093c 4000
8011 0000 c0a8 0066
c0a8 001e a192 0002
% 000c: length field (UDP header + data)
000c 0000 1000 0001
0000 0000 0000 0000
0000 0000 0000 FC52 010 0

% another IP packet, which will be filtered out due to unaccepted IP: 8d4c:5e60
% if src address filter is enabled

@ 120
4500 001d 093c 4000
8011 0000 8d4c 5e60
c0a8 001e a19f 0001

0035 0000 0809 1011
1213 0001 0001 0001
0001 0002 0002 0002
0002 0003 0003 0003
0003 0004 0004 0004
0004 0005 0005 0005
0005 0809 12ff ffff 011 0

PING request:
@ 140
4500 003c 2f46 0000
8001 0000 c0a8 0067
c0a8 001e 0800 4d53
0001 0008 6162 6364
6566 6768 696a 6b6c
6d6e 6f70 7172 7374
7576 7761 6263 6465
6667 6869 0000 0000 110 0

PING request:
@ 160
4500 003c 2f46 0000
8001 0000 c0a8 0068
c0a8 001e 0800 4d53
0001 0008 6162 6364
6566 6768 696a 6b6c
6d6e 6f70 7172 7374
7576 7761 6263 6465
6667 6869 0000 0000 110 0

% for wrong IP
PING request:
@ 180
4500 003c 2f46 0000
8001 0000 c0a8 0168
c0a8 001e 0800 4d53
0001 0008 6162 6364
6566 6768 696a 6b6c
6d6e 6f70 7172 7374
7576 7761 6263 6465
6667 6869 0000 0000 110 0

PING request:
@ 200
4500 003c 2f46 0000
8001 0000 c0a8 0269
c0a8 001e 0800 4d53
0001 0008 6162 6364
6566 6768 696a 6b6c
6d6e 6f70 7172 7374
7576 7761 6263 6465
6667 6869 0000 0000 110 0

% shortest packet possible (unpadded), addressed to FPGA1:
@ 250
4500 001d 093c 4000
8011 0000 c0a8 0061
% 000c: length field (UDP header + data)
c0a8 001e a192 0002
000c 0000 1000 0001 010 0
